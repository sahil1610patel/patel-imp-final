version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Image tag will be $IMAGE_TAG
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
      - docker tag $ECR_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - echo Updating task definition JSON with new image URI and role ARN...
      - sed -i "s|<IMAGE_NAME>|$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG|" taskdef.json
      - sed -i "s|<EXECUTION_ROLE_ARN>|$EXECUTION_ROLE_ARN|" taskdef.json
      - echo Registering new task definition revision...
      - export TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query "taskDefinition.taskDefinitionArn" --output text)
      - echo "New task definition ARN: $TASK_DEF_ARN"
      - echo Updating AppSpec file with new task definition ARN...
      - sed -i "s|<TASK_DEFINITION>|$TASK_DEF_ARN|" appspec.yml
  post_build:
    commands:
      - echo Build phase complete. Artifacts prepared for deployment.
artifacts:
  files:
    - appspec.yml
    - taskdef.json
